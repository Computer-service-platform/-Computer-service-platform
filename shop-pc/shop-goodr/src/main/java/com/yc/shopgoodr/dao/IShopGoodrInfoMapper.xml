<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Happer 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace 命名空间==》接口完全限定名==》和接口进行绑定-->
<mapper namespace="com.yc.shopgoodr.dao.IShopGoodrInfoMapper">
<!--添加商品详情-->
    <cache/>

<!--    <resultMap type="addGoodInfo" id="addGoodInfoResultMap">-->
<!--        <id property="gno" column="gno"/>-->
<!--        <result property="no" column="t_no"/>-->
<!--        <result property="gname" column="gname"/>-->
<!--        <result property="sellNum" column="sellNum"/>-->
<!--        <result property="point" column="point"/>-->
<!--        <result property="pics" column="pics"/>-->
<!--        &lt;!&ndash; association：配置的一对一属性 &ndash;&gt;-->
<!--        &lt;!&ndash; property：名字-->
<!--             javaType：类型-->
<!--         &ndash;&gt;-->
<!--        <association property="goodType" javaType="GoodType">-->
<!--            <id property="tno" column="tno"/>-->
<!--            <result property="tno" column="tno"/>-->
<!--        </association>-->
<!--    </resultMap>-->
    <resultMap type="GoodInfo" id="findByTremResult" >
        <id property="gno" column="gno"/>
        <result property="gno" column="gno"/>
        <result property="gname" column="gname"/>
        <result property="sellNum" column="sellNum"/>
        <result property="point" column="point"/>
        <result property="pics" column="pics"/>
        <association property="goodType" fetchType="lazy" javaType="GoodType">
            <id column="tno" property="tno"/>
            <result property="tno" column="tno"/>
            <result property="tname" column="tname"/>
            <result property="pic" column="pic"/>
            <result property="status" column="status"/>
        </association>
    </resultMap>
<select id="findByTrem" parameterType="GoodInfo" resultMap="findByTremResult">
    select gno,gname,sellNum,goodtype.*,point,pics from goodinfo INNER JOIN goodtype ON goodtype.tno = goodinfo.tno
    <where>
        <if test="gno!=null">
            gno=#{gno}
        </if>
        <if test="goodType!=null">
            and goodType.tno=#{goodType.tno}
        </if>
        <if test="gname!=null">
            and gname=#{gname}
        </if>
        <if test="sellNum!=null">
            and sellNum &gt; #{sellNum}
        </if>
        <if test="point!=null">
            and point &gt; #{point}
        </if>
        order by tno asc
    </where>
</select>
    <resultMap id="findSix" type="GoodDetail">
        <result property="sizeno" column="sizeno"/>
        <result property="size" column="size"/>
        <result property="balance" column="balance"/>
        <result property="intro" column="intro"/>
        <result property="showPic" column="showPic"/>
        <result property="price" column="price"/>
        <association property="goodInfo" fetchType="lazy" javaType="GoodInfo">
            <id column="gno" property="gno"/>
            <result property="gname" column="gname"/>
            <association property="goodType" fetchType="lazy" javaType="GoodType">
                <id column="tno" property="tno"/>
                <result property="tno" column="tno"/>
            </association>
        </association>
    </resultMap>
    <select id="findShowSix" resultMap="findSix">
        select aa.*,gname,tno from (select * from gooddetail) aa,(select gno,tno,gname from goodinfo gf1 where 6>
        (select count(gno) from goodinfo gf2 where gf1.tno=gf2.tno and gf1.gno>gf2.gno)
        order by gf1.tno asc, gf1.gno desc) bb,(select MIN(sizeno) min from gooddetail GROUP BY gno) cc
        where aa.gno=bb.gno and cc.min=aa.sizeno
    </select>

    <resultMap id="TotalResult" type="Integer">

    </resultMap>
    <select id="getCommentsTotal" resultMap="TotalResult">
        select count(*) from comments left join gooddetail on comments.sizeno=gooddetail.sizeno
        <where>
            gooddetail.gno=#{goodInfo.gno}
        </where>
    </select>

    <resultMap id="Infos" type="GoodInfo">
        <id property="gno" column="gno"/>
        <result property="gno" column="gno"/>
        <result property="gname" column="gname"/>
        <result property="sellNum" column="sellNum"/>
        <result property="point" column="point"/>
        <result property="pics" column="pics"/>
        <association property="goodType" fetchType="lazy" javaType="GoodType">
            <id column="tno" property="tno"/>
            <result property="tno" column="tno"/>
        </association>
        <association property="goodDetail" fetchType="lazy" javaType="GoodDetail">
            <id column="sizeno" property="sizeno"/>
            <result property="sizeno" column="sizeno"/>
            <result property="size" column="size"/>
            <result property="balance" column="balance"/>
            <result property="intro" column="intro"/>
            <result property="showPic" column="showPic"/>
            <result property="price" column="price"/>
        </association>
    </resultMap>
    <select id="findsByTno" resultMap="Infos">
        select gd.gno,gname,tno,sellNum,point,pics,sizeno,size,balance,intro,showPic,price from goodinfo gi inner join gooddetail gd inner join (select MIN(sizeno) min from gooddetail GROUP BY gno) cc on gi.gno=gd.gno and cc.min=gd.sizeno
        <where>
            <if test="goodType!=null">
                 tno=#{goodType.tno}
            </if>
        </where>
    </select>






</mapper>